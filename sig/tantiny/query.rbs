module Tantiny
  class Query
    TYPES: Array[Symbol]
    DEFAULT_BOOST: Float
    DEFAULT_FUZZY_DISTANCE: Integer

    def self.disjunction: (*Query queries) -> Query
    def self.conjunction: (*Query queries) -> Query

    def self.all_query: (?Index _index) -> Query
    def self.empty_query: (?Index _index) -> Query

    def self.term_query: (
      Index index,
      fields fields,
      String term,
      **untyped options
    ) -> Query

    def self.fuzzy_term_query: (
      Index index,
      fields fields,
      String term,
      ?Integer distance,
      **untyped options
    ) -> Query

    def self.phrase_query: (
      Index index,
      fields fields,
      String phrase,
      **untyped options
    ) -> Query

    def self.regex_query: (
      Index index,
      fields fields,
      String regex,
      **untyped options
    ) -> Query

    def self.prefix_query: (
      Index index,
      fields fields,
      String prefix,
      **untyped options
    ) -> Query

    def self.facet_query: (
      Index index,
      Symbol field,
      String path,
      **untyped options
    ) -> Query

    def self.range_query: (
      Index index,
      fields fields,
      Range[numeric | date] range,
      **untyped options
    ) -> Query

    def self.smart_query: (
      Index index,
      fields fields,
      String query_string,
      **untyped options
    ) -> Query

    def self.__new_all_query: () -> Query
    def self.__new_empty_query: () -> Query

    def self.__new_term_query: (
      Index index,
      String field,
      String term
    ) -> Query

    def self.__new_fuzzy_term_query: (
      Index index,
      String field,
      String term,
      Integer distance
    ) -> Query

    def self.__new_regex_query: (
      Index index,
      String field,
      String regex
    ) -> Query

    def self.__new_range_query: (
      Index index,
      String field,
      untyped from,
      untyped to
    ) -> Query

    def self.__new_phrase_query: (
      Index index,
      String field,
      Array[String] terms
    ) -> Query

    def self.__new_facet_query: (
      Index index,
      String field,
      String path
    ) -> Query

    def self.__disjunction: (Array[Query] queries) -> Query
    def self.__conjunction: (Array[Query] queries) -> Query

    def |: (Query query) -> Query
    def &: (Query query) -> Query
    def !: () -> Query
    def boost: (numeric boost_factor) -> Query

    def __negation: () -> Query
    def __boost: (Float boost_factor) -> Query

    private
    
    def self.construct_query: (
      Index index,
      Symbol query_type,
      Array[Symbol] allowed_fields,
      fields fields,
      Array[untyped] params,
      **untyped options
    ) -> Query

    def self.text_and_strings: (Index index) -> Array[Symbol]
  end
end
